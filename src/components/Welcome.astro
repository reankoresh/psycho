---
import { Image } from "astro:assets";
import lines from "../assets/lines.svg";
// import xs from "../assets/xs.svg";
import faces from "../assets/faces.svg";
import disorders from "../assets/disorders.svg";
import stress from "../assets/stress.svg";
import girl from "../assets/girl.svg";
import logo from "../assets/logo.svg";
import bg from "../assets/background.png";
---

<header id="scene" class="bg-radial bg-sky-200 h-dvh overflow-hidden">
  <!-- <div data-depth="0.2">
    <Image src={lines} alt="lines" />
  </div> -->
  <!-- <div data-depth="0.6">
    <Image
      src={xs}
      alt="xs"
      class="h-dvh relative mx-auto top-[35%] hidden lg:block"
    />
  </div> -->
  <div
    data-depth="0.9"
    data-scalar-y="0"
    class="relative h-full w-full flex items-center justify-center"
  >
    <Image
      src={disorders}
      alt="disorders"
      class="relative mx-auto top-[30%] lg:top-[15%] w-[190%] lg:w-[100%] max-w-none object-contain left-1/2 -translate-x-1/2 disordersBounce disordersLight"
    />
  </div>
  <div
    data-depth="1.2"
    class="relative h-full w-full flex items-center justify-center"
  >
    <Image
      src={stress}
      alt="stress"
      class="relative mx-auto top-[10%] hidden lg:block"
    />
  </div>
  <!-- <div
    data-depth="1.5"
    class="opacity-[0.7] relative h-full w-full flex items-center justify-center"
  >
    <Image
      src={faces}
      alt="faces"
      class="relative mx-auto top-[0%] hidden lg:block"
    />
  </div> -->
  <div
    data-depth="1.8"
    class="relative h-full w-full flex items-center justify-center"
  >
    <Image src={girl} alt="girl" class="relative mx-auto top-[52%]" />
  </div>
  <div
    data-depth="2.1"
    class="relative h-full w-full flex items-center justify-center"
  >
    <Image
      src={logo}
      alt="logo"
      class="relative mx-auto top-[5%] h-[35dvh] opacity-30"
    />
  </div>
  <script>
    import Parallax from "parallax-js";

    const scene = document.getElementById("scene");
    if (scene) {
      new Parallax(scene);
    }
  </script>
</header>

<style>
  /* Aplica ambas animaciones cuando coexisten */
  .disordersBounce.disordersLight {
    animation:
      disordersBounce 5s ease-in-out infinite,
      disordersLight 0.3s steps(8, end) infinite,
      disordersOpacity 2s linear infinite;
  }

  /* optimiza el render del glitch */
  .disordersLight {
    will-change: filter;
  }

  @keyframes disordersBounce {
    0%,
    100% {
      transform: translateY(-5%);
    }
    50% {
      transform: none;
    }
  }

  /* Glitch + flicker: solo afecta filter (brightness + canal RGB con drop-shadow) */
  @keyframes disordersLight {
    0% {
      filter: brightness(1.3);
    }
    8% {
      filter: brightness(1.1) drop-shadow(3px 0 0 #ff004d)
        drop-shadow(-3px 0 0 #00eaff);
    }
    16% {
      filter: brightness(1.5);
    }
    25% {
      filter: brightness(1.2) drop-shadow(-3px 0 0 #ff004d)
        drop-shadow(3px 0 0 #00eaff);
    }
    33% {
      filter: brightness(1);
    }
    41% {
      filter: brightness(1.4) drop-shadow(2px 0 0 #ff004d)
        drop-shadow(-2px 0 0 #00eaff);
    }
    50% {
      filter: brightness(1.1);
    }
    58% {
      filter: brightness(1.6);
    }
    66% {
      filter: brightness(1.2) drop-shadow(3px 0 0 #ff004d)
        drop-shadow(-3px 0 0 #00eaff);
    }
    75% {
      filter: brightness(1);
    }
    83% {
      filter: brightness(1.3) drop-shadow(2px 0 0 #ff004d)
        drop-shadow(-2px 0 0 #00eaff);
    }
    100% {
      filter: brightness(1.4);
    }
  }

  @keyframes disordersOpacity {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.7;
    }
  }
</style>
